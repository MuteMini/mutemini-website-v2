{"version":3,"sources":["components/SkillBar.jsx"],"names":["Color","red","green","blue","this","parseInt","toString","start","end","SkillBar","percent","children","useState","mainColor","setMainColor","title","setTitle","useEffect","diffR","diffG","diffB","Math","exp","interpolateColor","getHexCode","alignItems","h","w","base","md","borderRadius","bg","position","top","left","fontSize","whiteSpace","variant"],"mappings":"2LAGMA,E,WACF,WAAYC,EAAKC,EAAOC,GAAO,oBAC3BC,KAAKH,IAAMI,SAASJ,GACpBG,KAAKF,MAAQG,SAASH,GACtBE,KAAKD,KAAOE,SAASF,G,8CAEzB,WACI,MAAO,IACFC,KAAKH,IAAIK,SAAS,IAClBF,KAAKF,MAAMI,SAAS,IACpBF,KAAKD,KAAKG,SAAS,Q,KAI1BC,EAAQ,IAAIP,EAAM,IAAK,GAAI,IAC3BQ,EAAM,IAAIR,EAAM,GAAI,IAAK,IA6ChBS,UA7Bf,YAA0C,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAAY,EACHC,mBAAS,MADN,mBAC9BC,EAD8B,KACnBC,EADmB,OAEXF,mBAAS,MAFE,mBAE9BG,EAF8B,KAEvBC,EAFuB,KAiBrC,OAbAC,qBAAU,WACNH,EAnBR,SAA0BJ,GACtB,IAAIQ,EAAQV,EAAIP,IAAMM,EAAMN,IACxBkB,EAAQX,EAAIN,MAAQK,EAAML,MAC1BkB,EAAQZ,EAAIL,KAAOI,EAAMJ,KAQ7B,OAJAe,EAASA,GAFTR,EAAU,GAAG,EAAEW,KAAKC,KAAK,IAAIZ,EAAQ,OAETH,EAAMN,IAClCkB,EAASA,EAAQT,EAAWH,EAAML,MAClCkB,EAASA,EAAQV,EAAWH,EAAMJ,KAE3B,IAAIH,EAAMkB,EAAOC,EAAOC,GAQbG,CAAiBb,GAASc,cAEpCR,EADDN,GAAW,GACD,WACHA,GAAW,GACR,eACHA,GAAW,GACR,WAEA,eAEd,CAACA,IAGA,eAAC,IAAD,CAAMe,WAAW,SAAjB,UACI,cAAC,IAAD,CAAKC,EAAE,OAAOC,EAAG,CAACC,KAAK,OAAQC,GAAG,SAAUC,aAAa,KAAKC,GAAG,WAAjE,SACI,cAAC,IAAD,CAAKL,EAAE,OAAOC,EAAG,aAAajB,EAAQ,IAAKoB,aAAa,KAAKC,GAAIlB,EAAjE,SACI,eAAC,IAAD,CAAMmB,SAAS,WAAWC,IAAI,MAAMC,KAAK,OAAOC,SAAS,KAAKC,WAAW,SAASC,QAAQ,WAA1F,cAAuGtB,EAAvG,WAGPJ","file":"static/js/12.49dbeb70.chunk.js","sourcesContent":["import { Box, Text, Flex } from \"@chakra-ui/react\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nclass Color {\r\n    constructor(red, green, blue) {\r\n        this.red = parseInt(red);\r\n        this.green = parseInt(green);\r\n        this.blue = parseInt(blue);\r\n    }\r\n    getHexCode() {\r\n        return \"#\"\r\n            +this.red.toString(16)\r\n            +this.green.toString(16)\r\n            +this.blue.toString(16);\r\n    }\r\n}\r\n\r\nconst start = new Color(236, 49, 69);\r\nconst end = new Color(66, 141, 88);\r\n\r\nfunction interpolateColor(percent) {\r\n    var diffR = end.red - start.red;\r\n    var diffG = end.green - start.green;\r\n    var diffB = end.blue - start.blue;\r\n\r\n    percent = 1/(1+Math.exp(-10*(percent-0.4)));\r\n\r\n    diffR = (diffR * percent) + start.red;\r\n    diffG = (diffG * percent) + start.green;\r\n    diffB = (diffB * percent) + start.blue;\r\n\r\n    return new Color(diffR, diffG, diffB);\r\n}\r\n\r\nfunction SkillBar({ percent, children }) {\r\n    const [mainColor, setMainColor] = useState(null);\r\n    const [title, setTitle] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setMainColor( interpolateColor(percent).getHexCode() );\r\n        if(percent <= 0.4) {\r\n            setTitle(\"Beginner\");\r\n        } else if(percent <= 0.6) {\r\n            setTitle(\"Intermediate\");\r\n        } else if(percent <= 0.8) {\r\n            setTitle(\"Advanced\");\r\n        } else {\r\n            setTitle(\"Perfected\");\r\n        }\r\n    }, [percent]);\r\n\r\n    return (\r\n        <Flex alignItems=\"center\">\r\n            <Box h=\"35px\" w={{base:\"50vw\", md:\"500px\"}} borderRadius=\"xl\" bg=\"gray.400\">\r\n                <Box h=\"100%\" w={\"calc(100%*\"+percent+\")\"} borderRadius=\"xl\" bg={mainColor}>\r\n                    <Text position=\"relative\" top=\"3px\" left=\"10px\" fontSize=\"lg\" whiteSpace=\"nowrap\" variant=\"light-sm\"> {title} </Text>\r\n                </Box>\r\n            </Box>\r\n            {children}\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default SkillBar;"],"sourceRoot":""}